before_script:
  - docker info
  - printenv

stages:
  - test
  - pylint
  - build
  - deploy

# Run django unit tests
test_backend:
  stage: test
  image: python:3.13-slim-bookworm
  tags:
    - nas
    - docker
  services:
    - name: postgres:17.5
      alias: db
      variables:
        POSTGRES_DB: plant_tracker
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: unittest
  variables:
    DATABASE_PASSWORD: unittest
    DATABASE_HOST: db
  before_script:
    - pip3 install pipenv
    - pipenv install --dev
    - export LOCAL_MEDIA_ROOT=True
    - export DJANGO_SETTINGS_MODULE=backend.test_settings
    - cd backend/
  script:
    - pipenv run coverage run manage.py test
    - pipenv run coverage report
  coverage: '/TOTAL.*\s+(\d+\.\d+\%)$/'

# Run react unit tests
test_frontend:
  stage: test
  image: node:22-bookworm-slim
  tags:
    - nas
    - docker
  before_script:
    - npm install -D
    - export TZ='America/Los_Angeles'
  script:
    - npm test -- --coverage
  coverage: '/All files[^\|]*\|[^\|]*\s+([\d\.]+)/'

# Update pylint badge
pylint:
  stage: test
  image: python:3.13-slim-bookworm
  tags:
    - nas
    - docker
  before_script:
    - pip3 install pipenv
    - pipenv install --dev
    - export LOCAL_MEDIA_ROOT=True
  script:
    - mkdir ./pylint
    - pipenv run pylint --output-format=text backend/plant_tracker/ | tee ./pylint/pylint.log || pipenv run pylint-exit $?
    - PYLINT_SCORE=$(sed -n 's/^Your code has been rated at \([-0-9.]*\)\/.*/\1/p' ./pylint/pylint.log)
    - pipenv run anybadge --label=pylint --file=pylint/pylint.svg --value=$PYLINT_SCORE 3=red 5=orange 7=yellow 9=green
    - echo "Pylint score is $PYLINT_SCORE"
  artifacts:
    paths:
      - ./pylint/
  only:
    - master

# Build new container, increment most-recent tag
build:
  stage: build
  tags:
    - nas
    - shell
  script:
    - 'IMAGE_NAME="plant-tracker"'
    - 'LAST_TAG=$(docker images --format "{{.Repository}}:{{.Tag}}" | grep "^${IMAGE_NAME}:[0-9]*\.[0-9]*$" | sort --version-sort | tail -n 1 | cut -d\: -f 2)'
    - "NEW_TAG=$(echo $LAST_TAG | awk -F. '{$NF = $NF + 1;} 1' OFS=.)"
    - 'docker build --platform linux/amd64 -t $IMAGE_NAME:$NEW_TAG . -f docker/Dockerfile'
  only:
    - master

# Deploy most-recent container
deploy:
  stage: deploy
  tags:
    - nas
    - shell
  script:
    - 'IMAGE_NAME="plant-tracker"'
    - 'LAST_TAG=$(docker images --format "{{.Repository}}:{{.Tag}}" | grep "^${IMAGE_NAME}:[0-9]*\.[0-9]*$" | sort --version-sort | tail -n 1 | cut -d\: -f 2)'
    - 'sed -i "s|$IMAGE_NAME:[0-9]*\.[0-9]*|$IMAGE_NAME:$LAST_TAG|g" /home/jamedeus/docker/docker-compose.yaml'
    - 'docker compose -f /home/jamedeus/docker/docker-compose.yaml up -d'
  only:
    - master
