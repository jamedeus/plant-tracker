@reference './index.css';

.yarl__slide {
    @apply p-0;
}

/* Allow images that are smaller than the screen to scale up */
/* Should probably make multiple thumbnail sizes instead and use srcSet */
.yarl__slide > .yarl__slide_image {
    transition-property: height, max-height, width, max-width;
    transition-duration: 800ms;
    @apply max-h-full! max-w-full! h-screen w-screen;
}

/* Bottom navigation thumbnails */
button.yarl__thumbnails_thumbnail {
    & > img {
        @apply photo-thumbnail size-full;
    }
}

/* Hide zoom buttons on mobile */
.yarl__button[title='Zoom in'],
.yarl__button[title='Zoom out'] {
    @apply hidden md:block;
}

/* Hide zoom buttons while slideshow running */
.slideshow-running .yarl__button[title='Zoom in'],
.slideshow-running .yarl__button[title='Zoom out'] {
    @apply hidden;
}

/* Only show toggle slideshow direction button while slideshow running */
.yarl__button[title='Toggle direction'] {
    @apply hidden;
}
.slideshow-running .yarl__button[title='Toggle direction'] {
    @apply block;
}

/* Slideshow progress animation */
.slideshow_progress_bar {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 4px;
    background-color: var(--color-accent);
    transform-origin: left center;
    transition: transform 0s linear;
    animation: slideshow_progress_bar var(--slideshow-delay) linear forwards;

    /* Right to left (.reverse is added when direction is toggled) */
    &.reverse {
        left: auto;
        right: 0;
        transform-origin: right center;
    }
}

@keyframes slideshow_progress_bar {
    from {
        transform: scaleX(0);
    }
    to {
        transform: scaleX(1);
    }
}

/* Shrink thumbnail height to 0 when slideshow starts */
.yarl__thumbnails_container {
    transition-property: max-height, padding;
    transition-duration: 250ms;
    transition-timing-function: linear;
    /* Matches default height */
    max-height: var(--thumbnail-container-height);
    padding: 16px;

    /* Shrink when slideshow running or focus mode active */
    .slideshow-running &,
    .focus-mode & {
        max-height: 0px;
        padding: 0px;
    }
}

/* Photo date caption */
.yarl__slide > .yarl__slide_captions_container {
    @apply w-fit rounded-full mx-auto px-4 py-2;

    /* Semi-transparent frosted background */
    backdrop-filter: blur(8px) saturate(180%);
    -webkit-backdrop-filter: blur(8px) saturate(180%);
    background-color: color-mix(in oklab, #000 10%, #0000);

    /* Darker on desktop (may have lower contrast than phone screen) */
    @media (min-width: 768px) {
        background-color: color-mix(in oklab, #000 25%, #0000);
    }

    /* Text inside div */
    & > .yarl__slide_description {
        @apply font-semibold md:text-lg;
    }

    /* Fade out when focus mode is active */
    transition-property: opacity;
    transition-duration: 250ms;
    transition-timing-function: linear;
    .focus-mode & {
        opacity: 0;
    }
}

/* Dim buttons when focus mode active (except when hovered) */
.yarl__button {
    transition-property: opacity;
    transition-duration: 250ms;
    transition-timing-function: linear;
    opacity: 1;

    .focus-mode & {
        opacity: 0.3;
    }

    &:hover {
        opacity: 1;
    }
}

/* Next/prev buttons fill height (click anywhere along edge of screen) */
.yarl__button[title='Next photo'],
.yarl__button[title='Previous photo'] {
    @apply h-full;
}

/* Prevent next button covering close button */
.yarl__button[title='Close photo gallery'] {
    @apply z-100;
}

/* Top-left corner dropdown menu */
.gallery-dropdown {
    @apply absolute top-0 left-0 p-2;

    & > .yarl__button {
        @apply rounded-full;
        transition-property: color, background-color, opacity;
        transition-duration: 250ms !important;

        /* Hover/focus highlight matching other dropdown buttons */
        &:hover,
        .gallery-dropdown:focus-within > & {
            background-color: color-mix(in oklab,var(--color-base-content)20%,#0000);
            opacity: 1;
        }

        /* Mobile (prevents highlight persisting after closing menu) */
        @media (hover: none) {
            &:hover:not(:active, :focus-visible, :disabled, [disabled]) {
                background-color: #0000;
                .focus-mode & {
                    opacity: 0.3;
                }
            }
        }
    }
}
