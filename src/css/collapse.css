/*
Utility classes for a collapsible div controlled by a hidden checkbox/radio.
Inspired by DaisyUI v4 collapse, styling and unused features removed.
https://github.com/saadeghi/daisyui/blob/0f31b7997ee2909bb7f67856d229c2eb00ed95af/src/components/styled/collapse.css

Usage:
    <div className="collapse">
        <input type="checkbox" />
        <div className="collapse-title">Always Visible</div>
        <div className="collapse-content">
            <p>Hidden until collapse opened</p>
        </div>
    </div>
*/

/* Wrapper div, always visible, transition grid-template-rows for animation */
@utility collapse {
    /* Use !important to override collision with tailwind collapse class */
    visibility: visible !important;
    position: relative;
    display: grid;
    overflow: hidden;
    grid-template-rows: auto 0fr;
    transition: grid-template-rows 0.2s;
    width: 100%;

    /* Inputs that control open/close: fill first row, hide but clickable */
    & > input[type="checkbox"],
    & > input[type="radio"] {
        grid-column-start: 1;
        grid-row-start: 1;
        width: 100%;
        min-height: 3.75rem;
        appearance: none;
        opacity: 0;
        z-index: 1;
    }

    /* Cursor pointer unless accordion section already open */
    & > input[type="checkbox"],
    & > input[type="radio"]:not(:checked) {
        cursor: pointer;
    }

    /* Open: Add second grid row (animation) */
    &:has(> input[type="checkbox"]:checked),
    &:has(> input[type="radio"]:checked) {
        grid-template-rows: auto 1fr;
    }

    /* Open: Animate to full height, add bottom padding */
    & > input[type="checkbox"]:checked ~ .collapse-content,
    & > input[type="radio"]:checked ~ .collapse-content {
        min-height: fit-content;
        transition: padding 0.2s ease-out;
        padding-bottom: 1rem;
    }
}

/* Title: fill first grid row, relative so .collapse-arrow can anchor */
@utility collapse-title {
    grid-column-start: 1;
    grid-row-start: 1;
    width: 100%;
    min-height: 3.75rem;
    position: relative;
}

/* Content: second grid row (does not exist until opened), no height */
@utility collapse-content {
    grid-column-start: 1;
    grid-row-start: 2;
    min-height: 0px;
    transition: padding 0.2s ease-out;
    padding-left: 1rem;
    padding-right: 1rem;
    cursor: unset;
}

/* Collapse arrow icon (absolute positioned over right side of title) */
@utility collapse-arrow {
    & > .collapse-title:after {
        position: absolute;
        display: block;
        height: 0.5rem;
        width: 0.5rem;
        transform: translateY(-50%) rotate(225deg);
        transition-property: all;
        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
        transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
        transition-duration: 150ms;
        transition-duration: 0.2s;
        top: 1.9rem;
        inset-inline-end: 1.4rem;
        content: "";
        transform-origin: 75% 75%;
        box-shadow: 2px 2px;
        pointer-events: none;
    }

    /* Rotate arrow 180 degrees when opened */
    & > input[type="checkbox"]:checked ~ .collapse-title:after,
    & > input[type="radio"]:checked ~ .collapse-title:after {
        transform: translateY(-100%) rotate(45deg);
    }
}
