services:
  plant-tracker:
    image: plant-tracker
    container_name: plant-tracker
    hostname: plant-tracker
    depends_on:
      plant-tracker-db:
        condition: service_healthy
        restart: true
      plant-tracker-redis:
        condition: service_healthy
        restart: true
    environment:
      # Comma-seperated list, access on all others will be blocked
      # Defaults to * if omitted (not recommended)
      - ALLOWED_HOSTS=plants.lan,localhost
      # Domain for QR code URLS, use one of the ALLOWED_HOSTS
      - URL_PREFIX=plants.lan
      # Optional: Store user-uploaded files in S3 if all variables set
      # Photos will be stored locally if any AWS variables are missing
      # - AWS_ACCESS_KEY_ID=
      # - AWS_SECRET_ACCESS_KEY=
      # - AWS_STORAGE_BUCKET_NAME=
      # - AWS_S3_REGION_NAME=
      # # Cloudfront public key ID (Cloudfront -> Key management -> Public keys)
      # - CLOUDFRONT_KEY_ID=
      # # Optional (only if mounting privkey to different location)
      # - CLOUDFRONT_PRIVKEY_PATH=/mnt/backend/private_key.pem
      # # Cloudfront alternate domain used for photos (subdomain of URL_PREFIX)
      # - CLOUDFRONT_IMAGE_DOMAIN=static.plants.joshmedeiros.dev
      # # App domain (remove cloudfront subdomain so can set auth cookies)
      # - CLOUDFRONT_COOKIE_DOMAIN=.plants.joshmedeiros.dev
      # Serve static files (JS bundles) from CDN if set
      # - DJANGO_STATIC_HOST=https://static.plants.joshmedeiros.dev
      # Postgres database host (must match container below)
      - DATABASE_HOST=plant-tracker-db
      # Postgres database password (must match container below)
      - DATABASE_PASSWORD=supersecretpassword
      # Redis connection settings (must match container below)
      - REDIS_HOST=plant-tracker-redis
      - REDIS_PORT=6379
      # Optional: All postgres settings can be overridden with env vars
      # - DATABASE_NAME=
      # - DATABASE_USER=
      # - DATABASE_HOST=
      # - DATABASE_PORT=
      # Optional: Disables user accounts and authentication if True
      - SINGLE_USER_MODE=False
      # Optional: Persistent key between sessions
      # If blank a new key will be generated each time
      - SECRET_KEY="xxxxxxxxxxxxxxxxxxxxxx"
      # Optional: Admin interface credentials, will be created if
      # username and password are set (email is optional)
      - DJANGO_SUPERUSER_USERNAME=myusername
      - DJANGO_SUPERUSER_PASSWORD=mypassword
      # - DJANGO_SUPERUSER_EMAIL=
      # Optional: Number of gunicorn workers (defaults to 2 if not set)
      # - GUNICORN_WORKERS=2
    volumes:
      # Persistent storage between sessions (if not using AWS S3)
      - plant-tracker-data:/mnt/backend/data/
      # Cloudfront private key for signed URLs (if using AWS S3)
      # - ./private_key.pem:/mnt/backend/private_key.pem
    ports:
      - 8456:8456
    restart: unless-stopped

  plant-tracker-db:
    image: postgres:17.5
    container_name: plant-tracker-db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 60s
      retries: 5
      start_period: 30s
      timeout: 10s
    # shared memory limit
    shm_size: 128mb
    environment:
      POSTGRES_DB: plant_tracker
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: supersecretpassword
    volumes:
      - plant-tracker-database:/var/lib/postgresql/data
    ports:
      - 5432:5432
    restart: unless-stopped

  plant-tracker-redis:
    image: redis:7.4.5
    container_name: plant-tracker-redis
    hostname: plant-tracker-redis
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      retries: 3
      start_period: 10s
      timeout: 5s
    volumes:
      - plant-tracker-redis-data:/data
    restart: unless-stopped

volumes:
  plant-tracker-data:
  plant-tracker-database:
  plant-tracker-redis-data:
